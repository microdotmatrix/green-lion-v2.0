---
// Global head element with meta tags, structured data, and scripts

import { formatCanonicalURL } from "@/lib/utils";
import { SITE } from "@/lib/config";
import Fonts from "./fonts.astro";

export interface Props {
  title?: string;
  author?: string;
  profile?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
}

const {
  title = SITE.title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  ogImage = SITE.ogImage,
  canonicalURL = new URL(Astro.request.url, Astro.site),
} = Astro.props;

const socialImageURL = new URL(
  ogImage ?? SITE.ogImage ?? "og.png",
  Astro.url.origin,
).href;

const structuredData = {
  "@context": "https://schema.org",
  "@type": "Marketing",
  headline: `${title}`,
  image: `${socialImageURL}`,
  author: [
    {
      "@type": "Person",
      name: `${author}`,
      url: `${profile}`,
    },
  ],
};
---

<head>
  <meta charset="UTF-8" />
  <meta name="description" content="Astro description" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="canonical" href={formatCanonicalURL(canonicalURL)} />
  <meta name="generator" content={Astro.generator} />

  <title>{title}</title>

  <meta name="description" content={description} />
  <meta name="author" content={author} />

  <!-- Open Graph / Facebook -->
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:url" content={formatCanonicalURL(canonicalURL)} />
  <meta property="og:image" content={socialImageURL} />

  <!-- Twitter/X -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={formatCanonicalURL(canonicalURL)} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={socialImageURL} />

  <!-- Fonts -->
  <Fonts />

  <!-- Google JSON-LD Structured data -->
  <script
    is:inline
    type="application/ld+json"
    set:html={JSON.stringify(structuredData)}
  />

  <!-- Check if user has dark mode enabled from a previous visit -->
  <script is:inline>
    if (localStorage.theme === "dark") {
      document.documentElement.setAttribute("data-theme", "dark");
    }
  </script>

  <!-- Polyfill for support of CSS animation-timeline in unsupported browsers -->
  <script src="https://flackr.github.io/scroll-timeline/dist/scroll-timeline.js"
  ></script>
</head>
